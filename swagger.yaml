openapi: 3.0.3
info:
  title: Agartex Resource Management Service
  description: |-
    This is a server for making requests to the postgres database instance
  version: 0.0.1
servers:
  - url: http://localhost:3200
tags:
  - name: users
    description: CRUD operations for users
  - name: sessions
    description: CRUD operations for sessions
paths:
  /users/{userEmail}:
    parameters:
      - in: path
        name: userEmail
        schema:
          type: string
        required: true
        description: Email of the user to be gotten
    get:
      summary: Get data about user
      tags:
      - users
      description: Returns data of the given user
      responses:
        200:
          description: Data of the user
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/User'
        400:
          description: Malformed request
        404:
          description: User with given email not found
        415:
          description: Wrong content type (should be JSON)
        422:
          description: Missing fields
  
  /users:
    post:
      tags: 
        - users
      summary: Create a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserData'
      description: Creates a new user using the provided database
      responses:
        201:
          description: User created successfully
        400:
          description: Malformed request
        409:
          description: Could not create user due to conflicts
        415:
          description: Wrong content type (should be JSON)
        422:
          description: Missing fields
  
  /sessions/{sessionId}:
    parameters:
      - in: path
        name: sessionId
        schema:
          type: string
        required: true
        description: ID of the session
    get:
      tags:
        - sessions
      summary: Get data about session
      description: Returns the data of the given session
      responses:
        200:
          description: Data of the session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        400:
          description: Malformed request
        404:
          description: Session not found
    delete:
      tags:
        - sessions
      summary: Delete session
      description: Deletes the session with given ID
      responses:
        200:
          description: Successfully deleted session
        400:
          description: Malformed request
  /sessions:
    post:
      tags:
        - sessions
      summary: Create a new session
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionData'
      description: Creates a new session for the given user
      responses:
        201:
          description: Session created successfully
        400:
          description: Malformed request
        409:
          description: Duplicate session
        415:
          description: Wrong content type (should be JSON)
        422:
          description: Missing fields


components:
  schemas:
    SessionData:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: integer
        expires:
          type: integer
    Session:
      type: object
      properties:
        id:
          type: string
        user:
          $ref: '#/components/schemas/User'
        expires:
          type: integer

    UserData:
      type: object
      properties:
        email:
          type: string
          example: john@email.com
        password_hash:
          type: string
          example: idk_even
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        email:
          type: string
          example: john@email.com
        password_hash:
          type: string
          example: idk_even
          
  securitySchemes:
    user_id:
      type: apiKey
      in: header
      name: X-User-Id